#!/bin/sh

GIT_FLOW=`which git-flow`
if [ $? -gt 0 ]; then
   #echo "git-flow not installed, will not use this in summary"
   USE_GIT_FLOW=false
else
   USE_GIT_FLOW=true
   GIT_FLOW_DIR=`dirname $GIT_FLOW`
   # load common functionality
   . "$GIT_FLOW_DIR/gitflow-common"
fi
cb=`git branch | sed -e '/^[^*]/d' | sed -e 's/\* \(.*\)/\1/'`
ob=`git branch | sed -e '/^[*]/d'`
nb=`git branch | wc -l | tr -d ' '`
rb=`git remote`
lcd=`git log --relative-date -n 1 | grep '^Date:' | sed -e 's/^Date: *//'`
lca=`git log --relative-date -n 1 | grep '^Author:' | sed -e 's/^Author: *//'`
gdesc=`git describe master 2>/dev/null`
ret=$?
if [ $ret -gt 0 ]; then
  gdesc=`git describe master --always`
  numtags=0
else
  numtags=`git tag | wc -l`
fi
cwd=`pwd`
title="This is the git summary for project `basename $cwd`"
len=${#title}
let barnum=$len+1
echo $title
echo "on `date`"
seq -s "-" $barnum | sed 's/[0-9]//g'
if $USE_GIT_FLOW; then
   if gitflow_is_initialized; then
      GFTEST='is'
   else
      GFTEST='is not'
   fi
   echo "git flow $GFTEST being used in this project"
   echo ""
fi
if [ $nb -eq 1 ];then
   echo "There is $nb branch which is $cb"
   echo ""
elif [ $nb -gt 1 ];then
   echo "There are $nb branches. The current branch is $cb"
   echo -e "Other branches are:\n$ob"
   echo ""
fi
if [ "$rb" != "" ]; then
   echo "A remote repository is defined"
   git remote show $rb | head -3
else
   echo "No remote repositories have been defined"
fi
echo ""
numstash=$(git stash list | wc -l)
if [ $numstash -eq 1 ];then
   echo "There is $numstash stash:"
   git stash show
   echo ""
elif [ $numstash -gt 1 ];then
   echo "There are $numstash stashes:"
   git stash list
   echo ""
fi
echo "The last commit was $lcd by $lca"
echo ""
if [ $numtags -eq 0 ];then
   echo "There are no tags"
elif [ $numtags -eq 1 ];then
   echo "There is $numtags tag which is `git tag`"
elif [ $numtags -gt 1 ]; then
   echo "There are $numtags tags:"
   git tag | tr '\n' ',' | sed -e 's/,$/\n/'
fi
echo ""

if $USE_GIT_FLOW && gitflow_is_initialized; then
   git flow feature list 2>&1 | grep '^No .* exist'
   gfftest=$?
   if [ $gfftest -gt 0 ]; then
      echo "Feature branches:"
      git flow feature list -v
   fi
   git flow release list 2>&1 | grep '^No .* exist'
   gfrtest=$?
   if [ $gfrtest -gt 0 ]; then
      echo "Release branches:"
      git flow release list -v
   fi
   git flow hotfix list 2>&1 | grep '^No .* exist'
   gfhtest=$?
   if [ $gfhtest -gt 0 ]; then
      echo "Hotfix branches:"
      git flow hotfix list -v
   fi
fi



